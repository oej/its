		                     EMACS/DATAMEDIA COMMAND SET
		                       as of November 17, 1978
		             (Parentheses indicate not implemented yet)

	Ctrl or *Bare		Edit			Edit-Ctrl		Edit-X
	---- -- -----		----			---------		------
<				Backward Character							  <
>				Forward Character							  >
(				Backward Word					Backward End-of-Word	  (
)				Forward Word					Forward End-of-Word	  )
[				Beginning of Line				Back to Indentation	  [
]	Prefix Meta		End of Line					(Move to Comment Column)  ]
^	Prefix Control		Up Real Line					Up Comment Line		  ^
lf	* Indent New Line	Down Real Line					Indent New Comment Line	 lf
cr	* insert CRLF		Next Line					Down Comment Line	 cr
{				Goto Beginning					Mark Beginning		  {
}				Goto End					Mark End		  }
+				View Previous Screen							  +
\	Prefix Control-Meta	View Next Screen							  \
|				Move to Screen Edge							  |
~				Reposition Window							  ~
=				New Window					Where am I		  =
del	* Delete Chars Bkwds	Backward Kill Word				Bkwd Kill to Word End	del
_	[hold] Describe											  _
tab	* insert tab		Nested Indent					Indent Rigidly		tab
*				Multiply Arg by 4							  *
;				Indent for Comment				Set Comment Column	  ;
esc	* Prefix Meta		Prefix Control-Meta							esc
/				Define Kbd Macro				Call Last Kbd Macro	  /
?				Describe								  ?
1										1 Window		  1
2										2 Windows		  2
@				Mark sentence		Mark paragraph					  @
A	(Again)			Append Next Kill							  A
B				Backward sentence	Backward paragraph				  B
C	Exit			Center line		  [^C]			(Center Region)		  C
D				Delete Character	Kill Word		Kill to End-of-Word	  D
E				Exchange Characters	Exchange Words		(Exchange Lines)	  E
F				Forward sentence	Forward paragraph				  F
G	Abort			Go to Fixed Mark	  [^G]						  G
H				Set Bounds Region	Set Bounds Full					  H
I	[tab]			Insert CRLF after point	  [Edit-tab]					  I
J	[lf]						  [Edit-lf]					  J
K				Kill Line		Kill Region		Kill into Q-reg		  K
L	Insert Page Mark	Lowercase Word		Lowercase Region				  L
M	[cr]			Set Fixed Mark		  [Edit-cr]					  M
N	No-op			uNkill			uNkill Pop		Get Q-register		  N
O						     Complement Overwrite Mode	Other Window		  O
P				Go to Page		Mark Page		Set Bounds Page		  P
Q	Quote next char		Fill Paragraph		Fill Region		Set Fill Column		  Q
R				Reverse Char Search	Reverse Incr Search	Query Replace		  R
S				Character Search	Incremental Search	TECO Search		  S
T													  T
U				Uppercase Word		Uppercase Region	Uppercase Initial	  U
V													  V
W	Bkwd Kill Word		Copy Line		Copy Region		Put Q-register		  W
X	^X Prefix		^X Prefix		Execute MM Command	Execute Minibuffer	  X
Y				Select Buffer		List Buffers					  Y
Z	Quit			Zap to Character	Zap thru Character				  Z

		                  COMMANDS REDEFINED IN LISP MODE:
   		* indicates functions defined only in the INTERLISP-EMACS interface

	Ctrl 			Edit			Edit-Ctrl		Edit-X
	----			----			---------		------

tab				Indent for LISP								tab
@	Mark sexp		(Mark list)		(Mark up list)		Mark DEFUN		  @
A	* ARGLIST											  A
B	Backward sexp		Backward list		Backward list		Backward DEFUN		  B
D	Kill sexp											  D
E	Exchange sexps											  E
F	Forward sexp		Forward list		Forward up list		Forward DEFUN		  F
T				* Print to Level	* Prettyprint					  T
Y	* Up Eval											  Y
Z	* Exit to LISP											  Z

(See the file <BOYER>NEMACS.DOC for a description of the INTERLISP-EMACS interface.)




		                  COMMANDS REDEFINED IN SAIL MODE:

	Ctrl 			Edit			Edit-Ctrl		Edit-X
	----			----			---------		------

@	(Mark List)		(Mark Block)		(Mark Statement)	(Mark Procedure)	  F
B	Backward List		(Backward Statement)	Backward Block		(Backward Procedure)	  B
F	Forward List		Forward Statement	Forward Block		(Forward Procedure)	  F
V				Make BEGIN END		Make Named BEGIN END				  V


		                  COMMANDS REDEFINED IN MACRO MODE:

	Ctrl 			Edit			Edit-Ctrl		Edit-X
	----			----			---------		------

B				Go to AC Field		Go to Previous Label				  B
F				Go to Address Field	Go to Next Label				  F


		                  COMMANDS REDEFINED IN TECO MODE:

	Ctrl 			Edit			Edit-Ctrl		Edit-X
	----			----			---------		------

B				Backward conditional	Backward iteration				  B
F				Forward conditional	Forward iteration				  F


File commands:
	^X ^D	Directory Display
	^X ^E	Edit File
	^X ^F	Find File
	^X ^Q	Do Not Write File
	^X ^R	Read File
	^X ^S	Save File
	^X ^V	Visit File
	^X ^W	Write File

New macros written for this package:
^R Forward Word:  Move forward over one word.
^R Forward End-of-Word:  Move forward to the next word end.
^R Backward End-of-Word:  Like Backward Word, but moves to end of
	previous word.
^R Kill Word:  Kill next word and trailing delimiters.
^R Kill to End-of-Word:  Kill to next word end.
^R Backward Kill to End-of-Word:  Like Backward Kill Word,
	but kills to end of previous word.
^R Complement Overwrite Mode:
	If Overwrite Mode is on, turn it off.  If it is off,
	turn it on.  When Overwrite Mode is on, typed non-meta characters
	will delete and overwrite characters in the buffer instead
	of being inserted.  Meta characters still function normally.
Goto Page:  If no arg, go to top of next page.
	If arg is zero, go to top of page.
	If arg is negative, go to top of page, unless already at top,
		in which case go to top of preceding page.
	If arg is positive (+n), go to top of page n of buffer.
	If two args (m,n), go to line m of page whatever.
^R Copy Lines:  Like killing lines and getting them back,
	but doesn't mark buffer modified.
^R Set Fixed Mark:  If no arg, set "ring-of-point" mark.
	If arg is zero or positive, set corresponding fixed mark.
	There are 10 fixed marks, numbered 0 to 9.  They contain character
	counts relative to the beginning of the buffer.  Fixed marks may
	be changed only by this macro, and are unaffected by killing, etc.
^R Goto Fixed Mark:  If no arg, exchange point and "ring-of-point" mark.
	If negative arg, pop the "ring-of-point" mark.
	If zero or positive arg, set "ring-of-point" mark and goto fixed mark.
^R Zap to Character:  Kills text up to but not including a
	target character.  Uses the macro ^R Character Search to obtain
	the target character from the keyboard and search for it.
	The search skips over the character pointed to.
^R Zap thru Character:  Kills text up to and including a
	target character.  Uses the macro ^R Character Search to obtain
	the target character from the keyboard and search for it.
^R No-op:  Does nothing.
^R TECO Search:  Search, using the basic TECO string search facility.
	Special characters:
	    ^B matches any delimiter char.
	    ^N matches any char other than the char following it in the search
		string (i.e., "not").  ^N^B matches non-delimiters, and
		^N^X matches nothing.  ^N^Q^B matches all but ^B, etc.
	    ^O divides the string into substrings searched for simultaneously.
		Any one of these strings, if found, satisfies the search.
	    ^Q quotes the following char, i.e., deprives it of special
		significance.  (You must type ^Q twice in the minibuffer).
		Escape and rubout cannot be quoted.
	    ^X matches any char.
Quit:  Return to caller.  Tries very hard to do the right thing
	whether returning to SNDMSG, LISP, the EXEC, or recursive ^R.
^R Define Kbd Macro:  Begin defining keyboad macro.
	After you type this command, until you type it again,
	everything you type becomes part of the accumulating keyboard
	macro as well as being executed.

